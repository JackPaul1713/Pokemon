Name: Pokemon ™, Text Based Edition
Description: Text based Pokemon

OUTLINE
Bottom_Up:
new_game()
load_game()
save()
exit()

display_pokemon()
select_pokemon()
level_up_pokemon(pokemon)
  max_health = level * 10
  attack = ((max_cp - min_cp) * (level / 40)) + min_cp
heal_pokemon()

attack()
throw_pokeball()

load_game()
new_game()
switch_player()

level_up_pokemon()
battle_person()
battle_computer()
explore()
exit()

Top_Down:
#menu#
main:
  load_game()
  new_game()
    switch()
    my_pokemon:
      active:
        level_up()
        heal()
      all_pokemon:
        select()
    battle()
      person
      computer
    explore()
    exit()

#functions#
load_game()
{
  load in vars from file
}
new_game()
{
  create vars
}
switch_player()
{
  switches active player index
}
display_pokemon()
{
  displays pokemon stats
}
level_up_pokemon()
{
  uses candies to level up pokemon
}
heal_pokemon()
{
  restores the health of an injured pokemon for free
}
select_pokemon()
{
  displays list of pokemon
  user input to change index of active pokemon
}
battle(poke1, poke2)
{
  takes in 2 pokemon and type of battle (pvp, computer, exploring)
  while pokemons healths > 0:
  battle_turn(poke1, poke2)
  {
    shows stats, runs through options for pokemon, determins damage
    if exploring, option to throw pokeball
  }
  branched second turn
}
explore()
{
  random chance for battle or candy or nothing
}
exit()
{
  save_game()
  ends menu loop
}

#variables#
int active_player
list[] players
  mixed[] player = [name, active_pokemon, pokemons, candy]
    str name = ‘player_name‘
    int active_pokemon = 0 # position
    list[] pokemons = [pokemon...]
      mixed[] pokemon = [name, level, health, attack, potential]
        str name
        int level
        int[] health[current, max]
        int attack
        int[] potential = [min_cp, max_cp]
    int candy = 0
tuple() pokemon_pool = (pokemon)
  mixed() pokemon = (name, potential)
    str name
    int[] potential = [min_cp, max_cp]
